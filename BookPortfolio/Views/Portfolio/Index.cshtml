@model IEnumerable<BookPortfolio.Models.Portfolio>


@{
    ViewData["Title"] = ViewData["Username"] + "'s Bookshelf";
    string[] States = ["Reading", "Read", "To Read", "Want To Read"];
}

<div>
    <h2>@ViewData["Username"]'s Bookshelf </h2>
</div>
<div class="">
    <a asp-area="" asp-action="AddPortfolio" asp-controller="Portfolio" class=" btn btn-primary uk-button uk-button-primary">
        Add Book
    </a>
    <a href="@ViewData["Username"]" class=" btn btn-outline-secondary">View As Public</a>

</div>




@foreach (var state in States) {

    <h3>@state</h3>
    <div class="shelf d-flex p-4 m-2">
        @foreach (var item in Model.Where(b => b.BookState == state))
        {

            <div class="card" style="width: 12rem;">
                @{
                    string imgUrl = "";
                    if (item.Book.coverIds == null)
                    {
                        <img src="img/defbookcover-min.jpg" />
                    }
                    else
                    {
                        imgUrl = $"https://covers.openlibrary.org/b/id/{item.Book.coverIds[0]}-M.jpg";
                        <img src="@Url.Action("GetCachedImage", "Image", new {imageUrl = imgUrl})" class="card-img-top" alt="Book Cover" />

                    }
                }
                <div class="card-body">
                    <strong>@item.Book.Title</strong> by @item.Book.Author

                    <br />
                    @if (item.Rating != null)
                    {
                        <div>
                            Rating: @item.Rating/5
                        </div>
                    }
                    <br />
                    @if (item.Comment != null)
                    {
                        <div>
                            Comment: @item.Comment
                        </div>
                    }

                    <br />
                    <label for="bookState-@item.Book.Id">Update State:</label>
                    @{
                        var states = new[] { "Reading", "Read", "To Read", "Want to Read" };
                    }
                    <select class="form-control bookStateDropdown" book-id="@item.Book.Id">
                        @foreach (var substate in states)
                        {
                            var isSelected = state == substate ? "selected" : "";
                            Console.WriteLine(isSelected + ", " + state + ",  " + substate);
                            <option value="@substate" selected="@(state == substate ? "selected" : null)">@substate</option>
                        }
                    </select>
                </div>
            </div>
        }
    </div>
}



<!-- //TODO UPDATE TO BETTER CODE AS I THINK IT COULD BE BETTER (might be wrong, not very strong at this code :() -->
<script>
		document.addEventListener("DOMContentLoaded", function() {
		document.querySelectorAll(".bookStateDropdown").forEach(dropdown => {
			dropdown.addEventListener("change", function() {
				let bookId = this.getAttribute("book-id");
				let newState = this.value;
				let token = document.querySelector("input[name='__RequestVerificationToken']")?.value;

				fetch(`/Portfolio/UpdateState`, {
					method: "POST",
					headers: {
						"Content-Type": "application/x-www-form-urlencoded",
						"RequestVerificationToken": token
					},
					body: new URLSearchParams({
						bookId: bookId,
						newState: newState
					})
				})
				.then(response => {
					if (response.redirected) {
						window.location.href = response.url;
					} else if (!response.ok) {
						throw new Error("Failed to update book state.");
					}
				})
				.catch(error => console.error("Error:", error));
			});
		});
	});

</script>