@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
    <li class="nav-item">
        <span class="nav-link"> Debug: IsSignedIn = @(SignInManager.IsSignedIn(User) ? "YES" : "NO")</span>
    </li>
    <li class="nav-item">
        <span class="nav-link"> Debug: User.Identity.IsAuthenticated = @(User.Identity.IsAuthenticated ? "YES" : "NO")</span>
    </li>
    <li class="nav-item">
        <span class="nav-link">Debug: Username = @UserManager.GetUserName(User)</span>
    </li>

    @if (User.Identity.IsAuthenticated)
    {
        <li class="nav-item">
            <span class="nav-link">Logged in as @UserManager.GetUserName(User)</span>
        </li>
        <li class="nav-item">
            <form asp-controller="Account" asp-action="Logout" method="post">
                <button type="submit" class="btn btn-danger">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>